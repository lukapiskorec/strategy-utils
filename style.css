:root {
    /* Cyber Magenta theme */
    --bg: #07020a;
    --panel: #0f0814;
    --muted: #d46ccf;
    --text: #ff1ad9;
    /* bright magenta letters */
    --accent: #00f0ff;
    /* neon cyan */
    --accent-2: #ff00ff;
    /* hot magenta */
    --border: #2b1336;

    /* Retro UI tokens */
    --radius: 0;
    /* sharp edges */
    --shadow: none;
    /* no blur, no glow */
    --mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --sans: Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
}

* {
    box-sizing: border-box;
}

html,
body {
    height: 100%;
}

body {
    margin: 0;
    background:
        radial-gradient(1200px 500px at 10% -10%, #1a0e21 0%, transparent 60%),
        var(--bg);
    color: var(--text);

    /* back to the original sans stack */
    font-family: var(--sans);
    line-height: 1.4;

    /* smooth text on most browsers */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;

    /* keep only if you WANT chunky/pixelated images */
    /* image-rendering: pixelated; */
}


/* subtle CRT scanlines */
body::before {
    content: "";
    position: fixed;
    inset: 0;
    pointer-events: none;
    background:
        repeating-linear-gradient(to bottom,
            rgba(255, 0, 255, .05) 0px,
            rgba(255, 0, 255, .05) 1px,
            transparent 2px,
            transparent 3px);
    mix-blend-mode: overlay;
    opacity: .5;
    z-index: 0;
}

/* Header & container */
.app-header {
    padding: 10px 16px 6px;
    text-align: center;
    position: relative;
    z-index: 1;
}

.app-header h1 {
    margin: 0 0 4px 0;
    font-weight: 700;
    letter-spacing: .04em;
    border-bottom: 1px dotted var(--border);
    display: inline-block;
    padding-bottom: 2px;
    font-size: 25px;
}

.app-header .sub {
    margin: 0;
    color: var(--muted);
    font-size: 13px;
}

.container {
    max-width: 1100px;
    margin: 12px auto 36px;
    padding: 0 16px;
    position: relative;
    z-index: 1;
}

/* Controls (form) */
.controls {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: 8px;
    background: var(--panel);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    padding: 2px;
}

.field {
    grid-column: span 12;
    display: flex;
    flex-direction: column;
    gap: 3px;
}

.field label {
    font-size: 11px;
    letter-spacing: .04em;
    text-transform: uppercase;
}

.field small {
    color: var(--muted);
    font-size: 10px;
}

.field input[type="text"],
.field input[type="number"],
.field input[type="datetime-local"],
.field select {
    appearance: none;
    background: #0b0f13;
    color: var(--text);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    padding: 2px 8px;
    outline: none;
    font-family: var(--mono);
    font-size: 14px;
}

.field input::placeholder {
    color: #9157a0;
}

.field input:focus,
.field select:focus {
    outline: 1px dotted var(--accent);
    outline-offset: 0;
    border-color: var(--accent);
}

.actions {
    grid-column: span 12;
    display: flex;
    gap: 6px;
    justify-content: flex-end;
    margin-top: 0;
}

.btn {
    cursor: pointer;
    padding: 2px 10px;
    border-radius: var(--radius);
    border: 1px solid var(--border);
    color: var(--text);
    background: #0b0f13;
    transition: background .08s ease, border-color .08s ease, transform .02s ease;
    font-size: 11px;
    letter-spacing: .06em;
    text-transform: uppercase;
}

.btn:hover {
    border-color: var(--accent);
    background: var(--accent);
}

.btn:active {
    transform: translateY(1px);
}

.btn.primary {
    /* retro: solid block with double border effect */
    background: var(--accent-2);
    color: #020308;
    border: 3px double #012d33;
}

.btn.primary:hover {
    background: var(--accent);
    color: #020308;
    border: 3px double #012d33;
}

.btn:disabled {
    opacity: .6;
    cursor: not-allowed;
}

/* Meta under the form */
.meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin: 8px 2px;
}

.status,
.provider {
    font-size: 11px;
}

.status {
    color: var(--muted);
}

.status.busy {
    color: #ffd1f7;
}

.provider {
    color: var(--muted);
}

/* Info bar */
.infobar {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: 6px;
    margin: 6px 2px 10px;
}

.infobar .info-item {
    grid-column: span 12;
    background: #0b0f13;
    border: 1px solid var(--border);
    border-radius: var(--radius);
    padding: 2px 8px;
}

.infobar .label {
    display: block;
    color: var(--muted);
    font-size: 11px;
    margin-bottom: 2px;
    letter-spacing: .03em;
}

.infobar .value {
    font-family: var(--mono);
    font-size: 14px;
}

/* Inline checkbox row */
.inline-check {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: 2px;
}

.inline-check label {
    display: inline-flex;
    align-items: center;
    gap: 6px;
    font-size: 11px;
    color: var(--text);
}

.inline-check small {
    font-size: 10px;
    color: var(--muted);
}

/* Contract row + icons */
.addr-inline {
    display: inline-flex;
    align-items: center;
    gap: 4px;
    white-space: nowrap;
}

.addr-inline .addr {
    font-family: var(--mono);
    background: #0a0c10;
    border: 1px solid var(--border);
    border-radius: var(--radius);
    padding: 2px 6px;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    display: inline-block;
    font-size: 14px;
}

.icon-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    border-radius: var(--radius);
    border: 1px solid #fff;
    background: transparent;
    color: #fff;
    cursor: pointer;
    padding: 0;
    text-decoration: none;
    transition: background .08s ease, border-color .08s ease, transform .02s ease;
}

.icon-btn:hover {
    background: #1a0e21;
    border-color: var(--accent);
    color: var(--accent);
}

.icon-btn:active {
    transform: translateY(1px);
}

.icon-btn svg {
    display: block;
    width: 11px;
    height: 11px;
}

.icon-btn svg path {
    fill: currentColor;
}

/* Column picker */
.columns-picker {
    display: flex;
    flex-wrap: wrap;
    gap: 6px;
    align-items: center;
    margin: 6px 2px 10px;
    font-size: 11px;
    color: var(--muted);
}

.columns-picker label {
    display: inline-flex;
    gap: 6px;
    align-items: center;
    background: #0b0f13;
    border: 1px solid var(--border);
    border-radius: var(--radius);
    padding: 2px 6px;
    color: #e8a7e1;
    font-size: 11px;
    cursor: pointer;
}

.columns-picker input {
    accent-color: var(--accent);
}

/* Table */
.table-wrap {
    background: var(--panel);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    overflow: hidden;
}

table {
    width: 100%;
    border-collapse: collapse;
    font-family: var(--mono);
}

thead th {
    position: sticky;
    top: 0;
    background: #140a18;
    color: #ffd1f7;
    text-align: left;
    padding: 2px 10px;
    font-weight: 700;
    letter-spacing: .04em;
    text-transform: uppercase;
    border-bottom: 1px solid var(--border);
}

tbody td {
    padding: 2px 10px;
    border-bottom: 1px solid rgba(255, 255, 255, .08);
}

tbody tr:hover {
    background: rgba(255, 0, 255, .06);
}

/* Footer */
.app-footer {
    max-width: 1100px;
    margin: 16px auto 36px;
    padding: 0 16px;
    font-size: 11px;
    color: var(--muted);
    text-align: center;
}

/* Column hide rules */
table.hide-col-timestamp td[data-col="timestamp"],
table.hide-col-timestamp th[data-col="timestamp"] {
    display: none;
}

table.hide-col-unix td[data-col="unix"],
table.hide-col-unix th[data-col="unix"] {
    display: none;
}

table.hide-col-open td[data-col="open"],
table.hide-col-open th[data-col="open"] {
    display: none;
}

table.hide-col-high td[data-col="high"],
table.hide-col-high th[data-col="high"] {
    display: none;
}

table.hide-col-low td[data-col="low"],
table.hide-col-low th[data-col="low"] {
    display: none;
}

table.hide-col-close td[data-col="close"],
table.hide-col-close th[data-col="close"] {
    display: none;
}

table.hide-col-volume td[data-col="volume"],
table.hide-col-volume th[data-col="volume"] {
    display: none;
}

table.hide-col-mcap td[data-col="mcap"],
table.hide-col-mcap th[data-col="mcap"] {
    display: none;
}

table.hide-col-fee td[data-col="fee"],
table.hide-col-fee th[data-col="fee"] {
    display: none;
}

table.hide-col-breakeven td[data-col="breakeven"],
table.hide-col-breakeven th[data-col="breakeven"] {
    display: none;
}

table.hide-col-breakeven_mc td[data-col="breakeven_mc"],
table.hide-col-breakeven_mc th[data-col="breakeven_mc"] {
    display: none;
}

/* ===== Responsive grid spans =====
   1-col  (default): span 12
   2-cols (>= 600px): span 6
   3-cols (>= 760px): span 4
   4-cols (>=900px): span 3  (controls & infobar)
   5-cols (>=1000px): controls only (span 3 on a 15-track grid)
*/

@media (min-width:600px) {

    .controls .field,
    .infobar .info-item {
        grid-column: span 6;
    }
}

@media (min-width:760px) {

    .controls .field,
    .infobar .info-item {
        grid-column: span 4;
    }
}

@media (min-width:900px) {

    .controls .field,
    .infobar .info-item {
        grid-column: span 3;
    }
}

/* Narrow screens: stretch buttons */
@media (max-width:620px) {
    .actions {
        justify-content: stretch;
    }

    .btn {
        flex: 1;
    }
}

/* === Controls: 5 columns on wide screens === */
/* Use a 15-track grid so each control spans 3 tracks â†’ 5 items per row */
@media (min-width: 1000px) {
    .controls {
        grid-template-columns: repeat(15, 1fr);
    }

    /* Make both inputs and the actions block behave like 1 "cell" */
    .controls .field,
    .controls .actions {
        grid-column: span 3;
        /* 15 / 3 = 5 columns per row */
    }

    /* Keep the buttons from expanding oddly; let them sit side-by-side */
    .controls .actions {
        justify-content: flex-start;
        gap: 8px;
    }
}

/* Fixed-height scrollable table */
.table-wrap {
    background: var(--panel);
    border: 1px solid var(--border);
}

.table-scroll {
    height: 250px;
    /* adjust if you prefer larger/smaller */
    overflow: auto;
    border-radius: var(--radius);
}

.table-scroll table {
    width: 100%;
}



/* Firefox */
.table-scroll {
    scrollbar-width: thin;
    scrollbar-color: var(--text) #0b0f13;
    /* thumb, track */
    scrollbar-gutter: stable both-edges;
    /* avoids layout shift when bars appear */
}

/* WebKit (Chrome/Edge/Safari) */
.table-scroll::-webkit-scrollbar {
    width: 10px;
    /* vertical bar */
    height: 10px;
    /* horizontal bar (just in case) */
}

.table-scroll::-webkit-scrollbar-track {
    background: #0b0f13;
    /* dark track to match panel */
    border-left: 1px solid var(--border);
}

.table-scroll::-webkit-scrollbar-thumb {
    background: var(--text);
    /* bright magenta */
    border: 2px solid #0b0f13;
    /* creates a recessed look */
    border-radius: 0;
    /* sharp edges */
}

.table-scroll::-webkit-scrollbar-thumb:hover {
    background: var(--accent-2);
    /* hot magenta on hover */
}

.table-scroll::-webkit-scrollbar-corner {
    background: #0b0f13;
}


/* Chart wrapper */
.chart-wrap {
    margin-top: 12px;
    background: var(--panel);
    border: 1px solid var(--border);
    padding: 2px;
}

.chart-controls {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    align-items: center;
    margin-bottom: 8px;
    font-size: 11px;
    color: var(--muted);
}

.chart-controls label {
    display: inline-flex;
    gap: 6px;
    align-items: center;
    background: #0b0f13;
    border: 1px solid var(--border);
    padding: 2px 6px;
    color: #e8a7e1;
    font-size: 11px;
    cursor: pointer;
}

.chart-canvas-wrap {
    position: relative;
    background: #0b0f13;
    border: 1px solid var(--border);
    height: 430px;
    /* keep a bit taller than canvas to allow tooltip space if needed */
}

.chart-canvas-wrap canvas {
    display: block;
    width: 100%;
    height: 100%;
}

/* Tooltip */
.chart-tooltip {
    position: absolute;
    pointer-events: none;
    background: #140a18;
    color: var(--text);
    border: 1px solid var(--border);
    padding: 2px 8px;
    font-size: 11px;
    white-space: nowrap;
    transform: translate(8px, -100%);
    /* offset near the cursor */
    z-index: 2;
}

/* Legend */
.chart-legend {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    align-items: center;
    margin-top: 8px;
    font-size: 11px;
    color: var(--muted);
}

.chart-legend .swatch {
    display: inline-block;
    width: 10px;
    height: 10px;
    margin-right: 6px;
    border: 1px solid #000;
}

/* Smaller table text */
#prices {
    font-size: 11px;
}

#prices thead th {
    font-size: 11px;
}

#prices thead th,
#prices tbody td {
    padding: 2px 8px;
}


/* === Compact fields === */
.field {
    gap: 2px;
    /* less space between label and input */
}

.field label {
    font-size: 11px;
}

/* Text/number/datetime/select controls */
.field input[type="text"],
.field input[type="number"],
.field input[type="datetime-local"],
.field select {
    /* smaller vertical padding */
    padding: 0px 8px;
    /* top/bottom, left/right */
    font-size: 14px;
    /* optional: smaller text */
    line-height: 1.2;
    /* keeps text from adding extra height */
}

/* (Optional) make buttons match the tighter height */
.actions .btn {
    padding: 0px 10px;
    font-size: 11px;
}

/* (Optional) column picker pills a bit tighter too */
.columns-picker label {
    padding: 0px 6px;
    font-size: 11px;
}



/* Never allow horizontal scroll on the page */
html,
body {
    overflow-x: hidden;
}

/* Clip anything that pokes outside the chart (e.g., tooltip near the edge) */
.chart-canvas-wrap {
    overflow: hidden;
}

/* Keep the tooltip reasonable in width so it doesn't force wide layout */
.chart-tooltip {
    max-width: min(320px, 80vw);
    word-break: break-word;
}


/* === Unify ALL checkbox styles (columns, chart, and At Launch) === */

/* 1) Accent color for the checkbox control itself */
.columns-picker input[type="checkbox"],
.chart-controls input[type="checkbox"],
.inline-check input[type="checkbox"] {
    accent-color: var(--text);
    /* bright magenta */
}

/* 2) Default label look */
.columns-picker label,
.chart-controls label,
.inline-check label {
    color: var(--muted);
    border: 1px solid var(--border);
    background: #0b0f13;
    padding: 3px 6px;
    display: inline-flex;
    align-items: center;
    gap: 6px;
    cursor: pointer;
}

/* 3) Checked state: magenta label + stronger border/background */
.columns-picker label:has(input:checked),
.chart-controls label:has(input:checked),
.inline-check label:has(input:checked) {
    color: var(--text);
    border-color: var(--text);
    background: rgba(255, 0, 255, .06);
}

/* 4) Keyboard focus cue on the whole label when the input is focused */
.columns-picker label:has(input:focus-visible),
.chart-controls label:has(input:focus-visible),
.inline-check label:has(input:focus-visible) {
    outline: 1px dotted var(--text);
    outline-offset: 2px;
}

.chart-tooltip .ts {
    margin-bottom: 4px;
}

/* Let JS position the tooltip; don't shift it with CSS */
.chart-tooltip {
    transform: none !important;
}



/* Tabs for switching table data per strategy */
.tabs {
    display: flex;
    flex-wrap: wrap;
    gap: 6px;
    align-items: center;
    margin: 6px 2px 8px;
}

.tabs .tab {
    background: #0b0f13;
    border: 1px solid var(--border);
    color: #e8a7e1;
    padding: 3px 8px;
    font-size: 11px;
    cursor: pointer;
    user-select: none;
}

.tabs .tab.active {
    color: var(--text);
    border-color: var(--text);
    background: rgba(255, 0, 255, .06);
}

/* Per-strategy chart toggles (row below series toggles) */
.chart-strategy-controls {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    align-items: center;
    margin: 0 0 8px;
    font-size: 11px;
    color: var(--muted);
}

.chart-strategy-controls label {
    display: inline-flex;
    gap: 6px;
    align-items: center;
    background: #0b0f13;
    border: 1px solid var(--border);
    padding: 3px 6px;
    color: #e8a7e1;
    font-size: 11px;
    cursor: pointer;
}

.chart-strategy-controls input[type="checkbox"] {
    accent-color: var(--text);
}

.chart-strategy-controls label:has(input:checked) {
    color: var(--text);
    border-color: var(--text);
    background: rgba(255, 0, 255, .06);
}

/* line segment used in legends to preview dash styles */
.chart-legend .dash {
    display: inline-block;
    width: 18px;
    height: 0;
    border-top: 2px dashed currentColor;
    /* overridden to solid when needed */
    margin-right: 6px;
}



/* Tighter spacing below the chart and to the bottom of the page */
.chart-wrap {
    margin-bottom: 8px !important;
}

.table-wrap {
    margin-bottom: 8px !important;
}

.container {
    margin-bottom: 12px !important;
}

.app-footer {
    margin: 8px auto 8px !important;
    padding-bottom: 8px !important;
}

/* Avoid any last-child extra spacing inside the container */
.container> :last-child {
    margin-bottom: 0 !important;
}


/* Left side of the meta row: status + live API rate */
.meta-left {
    display: flex;
    align-items: center;
    gap: 8px;
}

/* API rate meter */
.rate {
    font-size: 11px;
    color: var(--muted);
    white-space: nowrap;
}

.rate.warn {
    color: #FFD400;
}

/* yellow near the limit */
.rate.danger {
    color: #FF6A6A;
}

/* red at/over the limit */